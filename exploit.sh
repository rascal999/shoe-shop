#!/usr/bin/env bash

RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m'

isLUHNValid() {
  local pan="$1"
  local panlen="${#pan}"
  local sum=0

  for ((i = panlen - 1; i >= 0; i--)); do
    local digit="${pan:$i:1}"
    if (((panlen-i) % 2 == 0)); then
       #even
       ((digit*=2))
       ((${#digit} == 2)) && digit=$((${digit:0:1}+${digit:1:1}))
    fi
    ((sum+=digit))
  done

  ((sum % 10 == 0))
}

# Check jq installed
if ! command -v jq &> /dev/null
then
    printf "${RED}ERROR: jq could not be found${NC}\n"
    exit 1
fi

# AUTH
echo -n "Authenticating against web app and fetching cookie.. "

AUTH=`curl -s -k --cookie-jar curl_cookie_jar.txt -X $'POST' \
    -H $'Host: localhost:3000' -H $'Content-Type: application/x-www-form-urlencoded' \
    --data-binary $'Email=user1%40example.com&Password=user1' \
    $'http://localhost:3000/api/login'`

if [[ "$?" == "0" ]]; then
  printf "\t\t${GREEN}[OK]${NC}\n"
else
  printf "\t\t${RED}[Fail]${NC}\n"
  exit 1
fi

# VULNERABLE ENDPOINT ACCESSIBLE?
echo -n "Checking if deprecated API endpoint is accessible.. "

JSON=`curl -s --cookie curl_cookie_jar.txt \
    -H $'Host: localhost:3000' \
    $'http://localhost:3000/api/v1/cards'`

if jq -e . >/dev/null 2>&1 <<<"$JSON"; then
  printf "\t\t${GREEN}[Accessible]${NC}\n"
else
  printf "\t\t${RED}[Invalid JSON]${NC}\n"
  exit 1
fi

echo -n "Checking if deprecated API endpoint is returning card info.. "

# VALID PAN RETURNED?
PAN=`echo $JSON | jq -r '.data[0].PAN' | grep -E "[0-9]{14,19}"`

isLUHNValid $PAN

if [[ "$?" == "0" ]]; then
  printf "\t${GREEN}[Valid PAN returned]${NC}\n"
else
  printf "\t${RED}[Invalid PAN returned]${NC}\n"
  exit 1
fi
